{
    "collab_server" : "",
    "contents" : "#读取数据\nKobe <- read.csv(\"data/Kobe Bryant.csv\")\nLeBron <- read.csv(\"data/LeBron James.csv\")\nCurry <- read.csv(\"data/Stephen Curry.csv\")\n\n#数据预处理,保留需要的维度\nmyvars <- c(\"G\", \"MP\", \"FG\", \"FGA\", \"X3P\", \"X3PA\", \"FT\", \"FTA\", \"ORB\", \"DRB\", \"AST\", \"STL\", \"BLK\", \"TOV\", \"PF\", \"PTS\")\nKobe <- Kobe[myvars]\nLeBron <- LeBron[myvars]\n\n#计算每一维度上的标准差\nsdOfKobe <- apply(Kobe, 2, sd)\nsdOfLeBron <- apply(LeBron, 2, sd)\n\n#第一种不确定性计算公式（每一维度的标准差之和），\n#参数为每个维度的标准差\nuncertaintyFunc1 <- function(x){\n  return(sum(x))\n}\n\n#计算第一种不确定性\nuncertaintyOfKobe <- uncertaintyFunc1(sdOfKobe)\nuncertaintyOfLeBron <- uncertaintyFunc1(sdOfLeBron)\n\n#计算协方差矩阵\ncovOfKobe <- cov(Kobe)\ncovOfLeBron <- cov(LeBron)\n\n#计算协方差矩阵的特征值\nevOfKobe <- eigen(covOfKobe, only.values = TRUE)$values\nevOfLeBron <- eigen(covOfLeBron, only.values = TRUE)$values\n\n#第二种不确定性计算方程，\n#参数为协方差矩阵的特征值\nuncertaintyFunc2 <- function(x){\n  d <- length(myvars) / 2\n  result <- pi^d / gamma(d+1) * prod(sqrt(x), na.rm = TRUE)\n  return(result)\n}\n\nuncertaintyOfKobe2 <- uncertaintyFunc2(evOfKobe)\nuncertaintyOfLeBron2 <- uncertaintyFunc2(evOfLeBron)\n",
    "created" : 1476249610419.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2889555983",
    "id" : "46D7F1D6",
    "lastKnownWriteTime" : 1476277174,
    "last_content_update" : 1476277174852,
    "path" : "E:/visualization/workspace/uncertainty/main.R",
    "project_path" : "main.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}